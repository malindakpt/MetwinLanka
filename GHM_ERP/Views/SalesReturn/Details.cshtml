@model BusinessObjects.Invoice
           @using BusinessObjects
@using GHM_ERP.Util


@{
    ViewBag.Title = "Sales Return Details";
}

<h2>@ViewBag.Title</h2>

<div>
    <h4>@Model.Description</h4>
	<hr />
    <dl class="dl-horizontal">
        <dt>
            Invoice No.
        </dt>

        <dd>
            @Model.FormattedInvoiceNo
        </dd>
        <dt>
            Client
        </dt>

        <dd>
            @Model.Client.Name
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Time)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Time)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
 
        <dt>
           Original Sales Invoice
        </dt>

        <dd>
            @Html.ActionLink(((Invoice)ViewBag.SalesInvoice).FormattedInvoiceNo, "SaleDetails", "ProductInvoice", new { id = Model.RelatedInvoiceId }, new { })
        </dd>

    </dl>
</div>
<h4>Items</h4>
<table class="table table-condensed table-hover">
    <thead>
        <tr>
            <th>Product</th>
            <th>Type</th>
            <th>Length</th>
            @*<th>Original Qty</th>*@
            <th>Quantity</th>
            <th>Unit Price</th>
            <th>Price</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            var prof = (BusinessObjects.Categories.ProductProfile)item.Profile;
            <tr>
                <td>@prof.Code -  @prof.Description</td>
                <td>@prof.Type</td>
                <td>@item.Length</td>
                <td>@item.Qty</td>
                <td>@Html.FormatAsMoney(item.UnitPrice)</td>
                <td>@Html.FormatAsMoney(item.Price)</td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <th colspan="3">Total</th>
            <th>@Model.Items.Sum(it=>it.Qty)</th>
            <td></td>
            <th>@Html.FormatAsMoney(Model.Items.Sum(it => it.Price))</th>
        </tr>
    </tfoot>
</table>
<hr/>
<h4>Payment Receipts</h4>
<table class="table table-condensed table-striped">
    <thead>
        <tr>
            <th>Method</th>
            <th>Date</th>
            <th>Amount</th>
        </tr>
    </thead>
    @{
        var showingPayments = Model.PaymentReceipts.Where(rec => rec.PaymentMethod != PaymentReceipt.PaymentType.Credit &&
                                                rec.Status == PaymentReceipt.PaymentStatus.Accepted).ToList();
    }
    <tbody>
        @foreach (var item in showingPayments)
        {
            <tr>
                <td>@item.PaymentMethod</td>
                <td>@item.Time</td>
                <td>@Html.FormatAsMoney(item.Amount)</td>
            </tr>
        }

        @if (!showingPayments.Any())
        {
            <tr>
                <td class="text-center" colspan="3"> <em>No payments</em></td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <th colspan="2">Total</th>
            <td>@Html.FormatAsMoney(showingPayments.Sum(i => i.Amount))</td>
        </tr>
    </tfoot>
</table>


<p>

    @Html.ActionLink("Back to List", "Index")
</p>
